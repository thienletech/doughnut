openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- {}
paths:
  /api/user:
    get:
      tags:
      - rest-user-controller
      operationId: getUserProfile
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
    post:
      tags:
      - rest-user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/testability/use_real_sandbox_github_and_close_all_github_issues:
    post:
      tags:
      - testability-rest-controller
      operationId: closeAllGithubIssues
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/update_current_user:
    post:
      tags:
      - testability-rest-controller
      operationId: updateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/trigger_exception:
    post:
      tags:
      - testability-rest-controller
      operationId: triggerException
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/time_travel_relative_to_now:
    post:
      tags:
      - testability-rest-controller
      operationId: timeTravelRelativeToNow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeTravelRelativeToNow"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/testability/time_travel:
    post:
      tags:
      - testability-rest-controller
      operationId: timeTravel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeTravel"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/testability/share_to_bazaar:
    post:
      tags:
      - testability-rest-controller
      operationId: shareToBazaar
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/replace_service_url:
    post:
      tags:
      - testability-rest-controller
      operationId: replaceServiceUrl
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/testability/randomizer:
    post:
      tags:
      - testability-rest-controller
      operationId: randomizer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Randomization"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/testability/link_notes:
    post:
      tags:
      - testability-rest-controller
      operationId: linkNotes
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/inject_suggested_questions:
    post:
      tags:
      - testability-rest-controller
      operationId: injectSuggestedQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuggestedQuestionsData"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/inject_notes:
    post:
      tags:
      - testability-rest-controller
      operationId: injectNotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotesTestData"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
  /api/testability/inject_circle:
    post:
      tags:
      - testability-rest-controller
      operationId: injectCircle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/testability/inject-predefined-questions:
    post:
      tags:
      - testability-rest-controller
      operationId: injectPredefinedQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredefinedQuestionsTestData"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PredefinedQuestion"
  /api/testability/feature_toggle:
    get:
      tags:
      - testability-rest-controller
      operationId: getFeatureToggle
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
    post:
      tags:
      - testability-rest-controller
      operationId: enableFeatureToggle
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/testability/clean_db_and_reset_testability_settings:
    post:
      tags:
      - testability-rest-controller
      operationId: resetDBAndTestabilitySettings
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/subscriptions/{subscription}:
    post:
      tags:
      - rest-subscription-controller
      operationId: update
      parameters:
      - name: subscription
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Subscription"
  /api/subscriptions/{subscription}/delete:
    post:
      tags:
      - rest-subscription-controller
      operationId: destroySubscription
      parameters: []
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int32
  /api/subscriptions/notebooks/{notebook}/subscribe:
    post:
      tags:
      - rest-subscription-controller
      operationId: createSubscription
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Subscription"
  /api/settings/current-model-version:
    get:
      tags:
      - rest-global-settings-controller
      operationId: getCurrentModelVersions
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GlobalAiModelSettings"
    post:
      tags:
      - rest-global-settings-controller
      operationId: setCurrentModelVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalAiModelSettings"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GlobalAiModelSettings"
  /api/reviews:
    post:
      tags:
      - rest-reviews-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InitialInfo"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewPoint"
  /api/review-questions/{reviewQuestionInstance}/toggle-approval:
    post:
      tags:
      - rest-predefined-question-controller
      operationId: toggleApproval
      parameters:
      - name: reviewQuestionInstance
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/review-questions/{reviewQuestionInstance}/regenerate:
    post:
      tags:
      - rest-review-question-controller
      operationId: regenerate
      parameters:
      - name: reviewQuestionInstance
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewQuestionInstance"
  /api/review-questions/{reviewQuestionInstance}/contest:
    post:
      tags:
      - rest-review-question-controller
      operationId: contest
      parameters:
      - name: reviewQuestionInstance
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewQuestionContestResult"
  /api/review-questions/{reviewQuestionInstance}/answer:
    post:
      tags:
      - rest-review-question-controller
      operationId: answerQuiz
      parameters:
      - name: reviewQuestionInstance
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AnsweredQuestion"
  /api/review-questions/{predefinedQuestion}/suggest-fine-tuning:
    post:
      tags:
      - rest-predefined-question-controller
      operationId: suggestQuestionForFineTuning
      parameters:
      - name: predefinedQuestion
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionSuggestionCreationParams"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/review-questions/{note}/refine-question:
    post:
      tags:
      - rest-predefined-question-controller
      operationId: refineQuestion
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredefinedQuestion"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/review-questions/{note}/note-questions:
    get:
      tags:
      - rest-predefined-question-controller
      operationId: getAllQuestionByNote
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PredefinedQuestion"
    post:
      tags:
      - rest-predefined-question-controller
      operationId: addQuestionManually
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredefinedQuestion"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/review-questions/generate-question:
    post:
      tags:
      - rest-review-question-controller
      operationId: generateQuestion
      parameters:
      - name: note
        in: query
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewQuestionInstance"
  /api/review-questions/generate-question-without-save:
    post:
      tags:
      - rest-predefined-question-controller
      operationId: generateQuestionWithoutSave
      parameters:
      - name: note
        in: query
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/review-points/{reviewPoint}/self-evaluate:
    post:
      tags:
      - rest-review-point-controller
      operationId: selfEvaluate
      parameters:
      - name: reviewPoint
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SelfEvaluation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewPoint"
  /api/review-points/{reviewPoint}/remove:
    post:
      tags:
      - rest-review-point-controller
      operationId: removeFromRepeating
      parameters:
      - name: reviewPoint
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewPoint"
  /api/notes/{parentNote}/create:
    post:
      tags:
      - rest-note-controller
      operationId: createNote
      parameters:
      - name: parentNote
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteCreationDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteCreationRresult"
  /api/notes/{note}/updateWikidataId:
    post:
      tags:
      - rest-note-controller
      operationId: updateWikidataId
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WikidataAssociationCreation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
  /api/notes/{note}/search:
    post:
      tags:
      - rest-note-controller
      operationId: searchForLinkTargetWithin
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTerm"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteTopic"
  /api/notes/{note}/review-setting:
    post:
      tags:
      - rest-note-controller
      operationId: updateReviewSetting
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewSetting"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RedirectToNoteResponse"
  /api/notes/{note}/delete:
    post:
      tags:
      - rest-note-controller
      operationId: deleteNote
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/notes/search:
    post:
      tags:
      - rest-note-controller
      operationId: searchForLinkTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTerm"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteTopic"
  /api/notes/move_after/{note}/{targetNote}/{asFirstChild}:
    post:
      tags:
      - rest-note-controller
      operationId: moveAfter
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      - name: targetNote
        in: path
        required: true
        schema:
          type: integer
      - name: asFirstChild
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/notes/convertSrt:
    post:
      tags:
      - rest-ai-audio-controller
      operationId: convertSrt
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AudioUploadDTO"
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SrtDto"
  /api/notebooks/{notebook}:
    get:
      tags:
      - rest-notebook-controller
      operationId: get
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notebook"
    post:
      tags:
      - rest-notebook-controller
      operationId: update_1
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotebookSettings"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notebook"
  /api/notebooks/{notebook}/share:
    post:
      tags:
      - rest-notebook-controller
      operationId: shareNotebook
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notebook"
  /api/notebooks/create:
    post:
      tags:
      - rest-notebook-controller
      operationId: createNotebook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteCreationDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RedirectToNoteResponse"
  /api/notebook_certificate_approvals/{notebookCertificateApproval}/approve:
    post:
      tags:
      - rest-notebook-certificate-approval-controller
      operationId: approve
      parameters:
      - name: notebookCertificateApproval
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookCertificateApproval"
  /api/notebook_certificate_approvals/request-approval/{notebook}:
    post:
      tags:
      - rest-notebook-certificate-approval-controller
      operationId: requestApprovalForNotebook
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookCertificateApproval"
  /api/links/{link}:
    post:
      tags:
      - rest-link-controller
      operationId: updateLink
      parameters:
      - name: link
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkCreation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/links/create/{sourceNote}/{targetNote}:
    post:
      tags:
      - rest-link-controller
      operationId: linkNoteFinalize
      parameters:
      - name: sourceNote
        in: path
        required: true
        schema:
          type: integer
      - name: targetNote
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkCreation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteRealm"
  /api/fine-tuning/{suggestedQuestion}/duplicate:
    post:
      tags:
      - rest-fine-tuning-data-controller
      operationId: duplicate
      parameters:
      - name: suggestedQuestion
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/fine-tuning/{suggestedQuestion}/delete:
    post:
      tags:
      - rest-fine-tuning-data-controller
      operationId: delete
      parameters:
      - name: suggestedQuestion
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/fine-tuning/upload-and-trigger-fine-tuning:
    post:
      tags:
      - rest-fine-tuning-data-controller
      operationId: uploadAndTriggerFineTuning
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
  /api/feedback/send/{assessmentQuestion}:
    post:
      tags:
      - rest-feedback-controller
      operationId: sendFeedback
      parameters:
      - name: assessmentQuestion
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Conversation"
  /api/circles:
    get:
      tags:
      - rest-circle-controller
      operationId: index
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Circle"
    post:
      tags:
      - rest-circle-controller
      operationId: createCircle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Circle"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Circle"
  /api/circles/{circle}/notebooks:
    post:
      tags:
      - rest-circle-controller
      operationId: createNotebookInCircle
      parameters:
      - name: circle
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteCreationDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RedirectToNoteResponse"
  /api/circles/join:
    post:
      tags:
      - rest-circle-controller
      operationId: joinCircle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CircleJoiningByInvitation"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Circle"
  /api/certificate/{notebook}:
    get:
      tags:
      - rest-certificate-controller
      operationId: getCertificate
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Certificate"
    post:
      tags:
      - rest-certificate-controller
      operationId: claimCertificate
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Certificate"
  /api/bazaar/{bazaarNotebook}/remove:
    post:
      tags:
      - rest-bazaar-controller
      operationId: removeFromBazaar
      parameters:
      - name: bazaarNotebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BazaarNotebook"
  /api/assessment/{assessmentQuestionInstance}/answer:
    post:
      tags:
      - rest-assessment-controller
      operationId: answerQuestion
      parameters:
      - name: assessmentQuestionInstance
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnswerDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AssessmentQuestionInstance"
  /api/assessment/{assessmentAttempt}:
    post:
      tags:
      - rest-assessment-controller
      operationId: submitAssessmentResult
      parameters:
      - name: assessmentAttempt
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AssessmentAttempt"
  /api/assessment/questions/{notebook}:
    post:
      tags:
      - rest-assessment-controller
      operationId: generateAssessmentQuestions
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AssessmentAttempt"
  /api/ai/{note}/completion:
    post:
      tags:
      - rest-ai-controller
      operationId: getCompletion
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AiCompletionParams"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AiAssistantResponse"
  /api/ai/recreate-notebook-assistant/{notebook}:
    post:
      tags:
      - rest-ai-controller
      operationId: recreateNotebookAssistant
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotebookAssistantCreationParams"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookAssistant"
  /api/ai/recreate-all-assistants:
    post:
      tags:
      - rest-ai-controller
      operationId: recreateAllAssistants
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /api/ai/generate-image:
    post:
      tags:
      - rest-ai-controller
      operationId: generateImage
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AiGeneratedImage"
  /api/ai/chat/{note}:
    get:
      tags:
      - rest-ai-controller
      operationId: tryRestoreChat
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
    post:
      tags:
      - rest-ai-controller
      operationId: chat
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRequest"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/SseEmitter"
  /api/ai/answer-clarifying-question:
    post:
      tags:
      - rest-ai-controller
      operationId: answerCompletionClarifyingQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AiCompletionAnswerClarifyingQuestionParams"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AiAssistantResponse"
  /api/user/{user}:
    patch:
      tags:
      - rest-user-controller
      operationId: updateUser
      parameters:
      - name: user
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/text_content/{note}/topic-constructor:
    patch:
      tags:
      - rest-text-content-controller
      operationId: updateNoteTopicConstructor
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteUpdateTopicDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
  /api/text_content/{note}/details:
    patch:
      tags:
      - rest-text-content-controller
      operationId: updateNoteDetails
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteUpdateDetailsDTO"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
  /api/review-questions/{note}/note-questions/{predefinedQuestion}:
    delete:
      tags:
      - rest-predefined-question-controller
      operationId: removeQuestion
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      - name: predefinedQuestion
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
    patch:
      tags:
      - rest-predefined-question-controller
      operationId: updateQuestion
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      - name: predefinedQuestion
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredefinedQuestion"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PredefinedQuestion"
  /api/review-points/{reviewPoint}/mark-as-repeated:
    patch:
      tags:
      - rest-review-point-controller
      operationId: markAsRepeated
      parameters:
      - name: reviewPoint
        in: path
        required: true
        schema:
          type: integer
      - name: successful
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewPoint"
  /api/notes/{note}:
    get:
      tags:
      - rest-note-controller
      operationId: show_1
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
    patch:
      tags:
      - rest-note-controller
      operationId: updateNoteAccessories
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/NoteAccessoriesDTO"
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteAccessory"
  /api/notes/{note}/undo-delete:
    patch:
      tags:
      - rest-note-controller
      operationId: undoDeleteNote
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteRealm"
  /api/notes/{note}/audio:
    patch:
      tags:
      - rest-note-controller
      operationId: uploadAudio
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AudioUploadDTO"
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteAccessory"
  /api/notes/{note}/audio-to-srt:
    patch:
      tags:
      - rest-ai-audio-controller
      operationId: convertNoteAudioToSRT
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SrtDto"
  /api/notebooks/{notebook}/move-to-circle/{circle}:
    patch:
      tags:
      - rest-notebook-controller
      operationId: moveToCircle
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      - name: circle
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Notebook"
  /api/fine-tuning/{suggestedQuestion}/update-suggested-question-for-fine-tuning:
    patch:
      tags:
      - rest-fine-tuning-data-controller
      operationId: updateSuggestedQuestionForFineTuning
      parameters:
      - name: suggestedQuestion
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionSuggestionParams"
        required: true
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/wikidata/search/{search}:
    get:
      tags:
      - rest-wikidata-controller
      operationId: searchWikidata
      parameters:
      - name: search
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WikidataSearchEntity"
  /api/wikidata/entity-data/{wikidataId}:
    get:
      tags:
      - rest-wikidata-controller
      operationId: fetchWikidataEntityDataByID
      parameters:
      - name: wikidataId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/WikidataEntityData"
  /api/user/current-user-info:
    get:
      tags:
      - rest-current-user-info-controller
      operationId: currentUserInfo
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CurrentUserInfo"
  /api/testability/github_issues:
    get:
      tags:
      - testability-rest-controller
      operationId: githubIssues
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: object
  /api/reviews/repeat:
    get:
      tags:
      - rest-reviews-controller
      operationId: repeatReview
      parameters:
      - name: timezone
        in: query
        required: true
        schema:
          type: string
      - name: dueindays
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DueReviewPoints"
  /api/reviews/overview:
    get:
      tags:
      - rest-reviews-controller
      operationId: overview
      parameters:
      - name: timezone
        in: query
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewStatus"
  /api/reviews/initial:
    get:
      tags:
      - rest-reviews-controller
      operationId: initialReview
      parameters:
      - name: timezone
        in: query
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
  /api/review-questions/{reviewQuestionInstance}:
    get:
      tags:
      - rest-review-question-controller
      operationId: showQuestion
      parameters:
      - name: reviewQuestionInstance
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AnsweredQuestion"
  /api/review-questions/{reviewPoint}/random-question:
    get:
      tags:
      - rest-review-question-controller
      operationId: generateRandomQuestion
      parameters:
      - name: reviewPoint
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewQuestionInstance"
  /api/review-points/{reviewPoint}:
    get:
      tags:
      - rest-review-point-controller
      operationId: show
      parameters:
      - name: reviewPoint
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReviewPoint"
  /api/notes/{note}/note-info:
    get:
      tags:
      - rest-note-controller
      operationId: getNoteInfo
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteInfo"
  /api/notes/{note}/accessory:
    get:
      tags:
      - rest-note-controller
      operationId: showNoteAccessory
      parameters:
      - name: note
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NoteAccessory"
  /api/notebooks:
    get:
      tags:
      - rest-notebook-controller
      operationId: myNotebooks
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebooksViewedByUser"
  /api/notebooks/{notebook}/notes:
    get:
      tags:
      - rest-notebook-controller
      operationId: getNotes
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
  /api/notebooks/{notebook}/dump:
    get:
      tags:
      - rest-notebook-controller
      operationId: downloadNotebookDump
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NoteBrief"
  /api/notebook_certificate_approvals/get-all-pending-request:
    get:
      tags:
      - rest-notebook-certificate-approval-controller
      operationId: getAllPendingRequest
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotebookCertificateApproval"
  /api/notebook_certificate_approvals/for-notebook/{notebook}:
    get:
      tags:
      - rest-notebook-certificate-approval-controller
      operationId: getApprovalForNotebook
      parameters:
      - name: notebook
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/NotebookCertificateApproval"
  /api/healthcheck:
    get:
      tags:
      - rest-health-check-controller
      operationId: ping
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/fine-tuning/all-suggested-questions-for-fine-tuning:
    get:
      tags:
      - rest-fine-tuning-data-controller
      operationId: getAllSuggestedQuestions
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SuggestedQuestionForFineTuning"
  /api/feedback/all:
    get:
      tags:
      - rest-feedback-controller
      operationId: getFeedbackThreadsForUser
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Conversation"
  /api/failure-reports:
    get:
      tags:
      - rest-failure-report-controller
      operationId: failureReports
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/failure-reports/{failureReport}:
    get:
      tags:
      - rest-failure-report-controller
      operationId: show_2
      parameters:
      - name: failureReport
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FailureReportForView"
  /api/data_upgrade:
    get:
      tags:
      - rest-health-check-controller
      operationId: dataUpgrade
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
  /api/circles/{circle}:
    get:
      tags:
      - rest-circle-controller
      operationId: showCircle
      parameters:
      - name: circle
        in: path
        required: true
        schema:
          type: integer
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CircleForUserView"
  /api/bazaar:
    get:
      tags:
      - rest-bazaar-controller
      operationId: bazaar
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BazaarNotebook"
  /api/assessment:
    get:
      tags:
      - rest-assessment-controller
      operationId: getMyAssessments
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AssessmentAttempt"
  /api/ai/dummy:
    get:
      tags:
      - rest-ai-controller
      operationId: dummyEntryToGenerateDataTypesThatAreRequiredInEventStream
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DummyForGeneratingTypes"
  /api/ai/available-gpt-models:
    get:
      tags:
      - rest-ai-controller
      operationId: getAvailableGptModels
      responses:
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
components:
  schemas:
    Circle:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 255
          minLength: 1
          type: string
    Ownership:
      type: object
      properties:
        id:
          type: integer
          format: int32
        circle:
          $ref: "#/components/schemas/Circle"
        ownerName:
          type: string
    User:
      required:
      - externalIdentifier
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        externalIdentifier:
          type: string
        ownership:
          $ref: "#/components/schemas/Ownership"
        dailyNewNotesCount:
          type: integer
          format: int32
        spaceIntervals:
          type: string
        admin:
          type: boolean
    TimeTravelRelativeToNow:
      type: object
      properties:
        hours:
          type: integer
          format: int32
    TimeTravel:
      type: object
      properties:
        travel_to:
          type: string
    Randomization:
      type: object
      properties:
        choose:
          type: string
          enum:
          - first
          - last
          - seed
        seed:
          type: integer
          format: int32
    MCQWithAnswer:
      required:
      - correctChoiceIndex
      - multipleChoicesQuestion
      type: object
      properties:
        multipleChoicesQuestion:
          $ref: "#/components/schemas/MultipleChoicesQuestion"
        correctChoiceIndex:
          type: integer
          format: int32
    MultipleChoicesQuestion:
      required:
      - choices
      type: object
      properties:
        stem:
          type: string
        choices:
          type: array
          items:
            type: string
    QuestionSuggestionParams:
      required:
      - preservedQuestion
      - realCorrectAnswers
      type: object
      properties:
        comment:
          type: string
        preservedQuestion:
          $ref: "#/components/schemas/MCQWithAnswer"
        preservedNoteContent:
          type: string
        positiveFeedback:
          type: boolean
        realCorrectAnswers:
          type: string
    SuggestedQuestionsData:
      type: object
      properties:
        examples:
          type: array
          writeOnly: true
          items:
            $ref: "#/components/schemas/QuestionSuggestionParams"
    NoteTestData:
      type: object
      properties:
        Topic:
          type: string
        Details:
          type: string
        Parent Topic:
          type: string
        Skip Review:
          type: boolean
        Image Url:
          type: string
        Image Mask:
          type: string
        Wikidata Id:
          type: string
    NotesTestData:
      type: object
      properties:
        noteTestData:
          type: array
          writeOnly: true
          items:
            $ref: "#/components/schemas/NoteTestData"
        externalIdentifier:
          type: string
          writeOnly: true
        circleName:
          type: string
          writeOnly: true
    PredefinedQuestionTestData:
      type: object
      properties:
        Note Topic:
          type: string
        Question:
          type: string
        Answer:
          type: string
        One Wrong Choice:
          type: string
        Approved:
          type: boolean
    PredefinedQuestionsTestData:
      type: object
      properties:
        notebookTitle:
          type: string
        notebookCertifiable:
          type: boolean
        predefinedQuestionTestData:
          type: array
          items:
            $ref: "#/components/schemas/PredefinedQuestionTestData"
    BareQuestion:
      required:
      - multipleChoicesQuestion
      type: object
      properties:
        checkSpell:
          type: boolean
        multipleChoicesQuestion:
          $ref: "#/components/schemas/MultipleChoicesQuestion"
    PredefinedQuestion:
      required:
      - bareQuestion
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        bareQuestion:
          $ref: "#/components/schemas/BareQuestion"
        correctAnswerIndex:
          type: integer
          format: int32
        approved:
          type: boolean
    SubscriptionDTO:
      type: object
      properties:
        dailyTargetOfNewNotes:
          type: integer
          format: int32
    Note:
      required:
      - createdAt
      - id
      - noteTopic
      - updatedAt
      type: object
      properties:
        noteTopic:
          $ref: "#/components/schemas/NoteTopic"
        details:
          type: string
        parentId:
          type: integer
          format: int32
        updatedAt:
          type: string
          format: date-time
        id:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          readOnly: true
        wikidataId:
          type: string
    NoteTopic:
      required:
      - id
      - topicConstructor
      type: object
      properties:
        id:
          type: integer
          format: int32
        topicConstructor:
          type: string
        shortDetails:
          type: string
        linkType:
          type: string
          enum:
          - no link
          - related to
          - a specialization of
          - an application of
          - an instance of
          - a part of
          - tagged by
          - an attribute of
          - the opposite of
          - author of
          - using
          - an example of
          - before
          - similar to
          - confused with
        targetNoteTopic:
          $ref: "#/components/schemas/NoteTopic"
        parentNoteTopic:
          $ref: "#/components/schemas/NoteTopic"
    Notebook:
      required:
      - headNote
      - id
      - notebookSettings
      - updated_at
      type: object
      properties:
        id:
          type: integer
          format: int32
        headNote:
          $ref: "#/components/schemas/Note"
        certifiable:
          type: boolean
        notebookSettings:
          $ref: "#/components/schemas/NotebookSettings"
        creatorId:
          type: string
        updated_at:
          type: string
          format: date-time
    NotebookSettings:
      type: object
      properties:
        skipReviewEntirely:
          type: boolean
        numberOfQuestionsInAssessment:
          type: integer
          format: int32
        certificateExpiry:
          type: string
          example: 1y 6m
          default: 1y
    Subscription:
      required:
      - id
      type: object
      properties:
        headNote:
          $ref: "#/components/schemas/Note"
        title:
          type: string
        id:
          type: integer
          format: int32
        dailyTargetOfNewNotes:
          type: integer
          format: int32
        user:
          $ref: "#/components/schemas/User"
        notebook:
          $ref: "#/components/schemas/Notebook"
        fromDTO:
          $ref: "#/components/schemas/SubscriptionDTO"
    GlobalAiModelSettings:
      type: object
      properties:
        questionGenerationModel:
          type: string
        evaluationModel:
          type: string
        othersModel:
          type: string
    InitialInfo:
      type: object
      properties:
        noteId:
          type: integer
          format: int32
        skipReview:
          type: boolean
    ReviewPoint:
      required:
      - id
      - nextReviewAt
      - note
      type: object
      properties:
        id:
          type: integer
          format: int32
        note:
          $ref: "#/components/schemas/Note"
        lastReviewedAt:
          type: string
          format: date-time
        nextReviewAt:
          type: string
          format: date-time
        initialReviewedAt:
          type: string
          format: date-time
        repetitionCount:
          type: integer
          format: int32
        forgettingCurveIndex:
          type: integer
          format: int32
        removedFromReview:
          type: boolean
    ReviewQuestionInstance:
      required:
      - bareQuestion
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        bareQuestion:
          $ref: "#/components/schemas/BareQuestion"
        notebook:
          $ref: "#/components/schemas/Notebook"
    ReviewQuestionContestResult:
      type: object
      properties:
        reason:
          type: string
        rejected:
          type: boolean
    AnswerDTO:
      type: object
      properties:
        spellingAnswer:
          type: string
        choiceIndex:
          type: integer
          format: int32
    Answer:
      required:
      - correct
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        spellingAnswer:
          type: string
        choiceIndex:
          type: integer
          format: int32
        correct:
          type: boolean
    AnsweredQuestion:
      required:
      - answer
      - predefinedQuestion
      - reviewQuestionInstanceId
      type: object
      properties:
        note:
          $ref: "#/components/schemas/Note"
        predefinedQuestion:
          $ref: "#/components/schemas/PredefinedQuestion"
        answer:
          $ref: "#/components/schemas/Answer"
        answerDisplay:
          type: string
        reviewQuestionInstanceId:
          type: integer
          format: int32
    QuestionSuggestionCreationParams:
      type: object
      properties:
        comment:
          type: string
        isPositiveFeedback:
          type: boolean
    SuggestedQuestionForFineTuning:
      required:
      - id
      - preservedQuestion
      type: object
      properties:
        id:
          type: integer
          format: int32
        comment:
          type: string
        preservedQuestion:
          $ref: "#/components/schemas/MCQWithAnswer"
        preservedNoteContent:
          type: string
        realCorrectAnswers:
          type: string
        createdAt:
          type: string
          format: date-time
        positiveFeedback:
          type: boolean
    SelfEvaluation:
      type: object
      properties:
        adjustment:
          type: integer
          format: int32
    NoteCreationDTO:
      required:
      - topicConstructor
      type: object
      properties:
        topicConstructor:
          maxLength: 150
          minLength: 1
          type: string
        linkTypeToParent:
          type: string
          enum:
          - no link
          - related to
          - a specialization of
          - an application of
          - an instance of
          - a part of
          - tagged by
          - an attribute of
          - the opposite of
          - author of
          - using
          - an example of
          - before
          - similar to
          - confused with
        wikidataId:
          pattern: ^$|Q\d+
          type: string
    NoteCreationRresult:
      required:
      - created
      - parent
      type: object
      properties:
        created:
          $ref: "#/components/schemas/NoteRealm"
        parent:
          $ref: "#/components/schemas/NoteRealm"
    NoteRealm:
      required:
      - id
      - note
      type: object
      properties:
        id:
          type: integer
          format: int32
        note:
          $ref: "#/components/schemas/Note"
        fromBazaar:
          type: boolean
        circle:
          $ref: "#/components/schemas/Circle"
        children:
          type: array
          items:
            $ref: "#/components/schemas/Note"
        refers:
          type: array
          items:
            $ref: "#/components/schemas/Note"
    WikidataAssociationCreation:
      required:
      - wikidataId
      type: object
      properties:
        wikidataId:
          type: string
    SearchTerm:
      required:
      - searchKey
      type: object
      properties:
        searchKey:
          type: string
        allMyNotebooksAndSubscriptions:
          type: boolean
        allMyCircles:
          type: boolean
    ReviewSetting:
      type: object
      properties:
        rememberSpelling:
          type: boolean
        skipReview:
          type: boolean
        level:
          type: integer
          format: int32
    RedirectToNoteResponse:
      type: object
      properties:
        noteId:
          type: integer
          format: int32
    AudioUploadDTO:
      type: object
      properties:
        uploadAudioFile:
          type: string
          format: binary
    SrtDto:
      required:
      - srt
      type: object
      properties:
        srt:
          type: string
    NotebookCertificateApproval:
      required:
      - id
      - notebook
      type: object
      properties:
        id:
          type: integer
          format: int32
        notebook:
          $ref: "#/components/schemas/Notebook"
        lastApprovalTime:
          type: string
          format: date-time
    LinkCreation:
      required:
      - linkType
      type: object
      properties:
        linkType:
          type: string
          enum:
          - no link
          - related to
          - a specialization of
          - an application of
          - an instance of
          - a part of
          - tagged by
          - an attribute of
          - the opposite of
          - author of
          - using
          - an example of
          - before
          - similar to
          - confused with
        moveUnder:
          type: boolean
        asFirstChild:
          type: boolean
    AssessmentQuestionInstance:
      required:
      - bareQuestion
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        bareQuestion:
          $ref: "#/components/schemas/BareQuestion"
        answer:
          $ref: "#/components/schemas/Answer"
    Conversation:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        assessmentQuestionInstance:
          $ref: "#/components/schemas/AssessmentQuestionInstance"
        subjectOwnership:
          $ref: "#/components/schemas/Ownership"
        conversationInitiator:
          $ref: "#/components/schemas/User"
        message:
          type: string
    CircleJoiningByInvitation:
      required:
      - invitationCode
      type: object
      properties:
        invitationCode:
          maxLength: 20
          minLength: 10
          type: string
    Certificate:
      required:
      - expiryDate
      - id
      - startDate
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: "#/components/schemas/User"
        notebook:
          $ref: "#/components/schemas/Notebook"
        startDate:
          type: string
          format: date-time
        expiryDate:
          type: string
          format: date-time
        creatorName:
          type: string
    BazaarNotebook:
      required:
      - id
      - notebook
      type: object
      properties:
        id:
          type: integer
          format: int32
        notebook:
          $ref: "#/components/schemas/Notebook"
    AssessmentAttempt:
      required:
      - id
      - notebookId
      type: object
      properties:
        id:
          type: integer
          format: int32
        totalQuestionCount:
          type: integer
          format: int32
        answersCorrect:
          type: integer
          format: int32
        notebookId:
          type: integer
          format: int32
        notebookTitle:
          type: string
        submittedAt:
          type: string
          format: date-time
        isPass:
          type: boolean
        assessmentQuestionInstances:
          type: array
          items:
            $ref: "#/components/schemas/AssessmentQuestionInstance"
        certifiable:
          type: boolean
    AiCompletionParams:
      type: object
      properties:
        detailsToComplete:
          type: string
    AiAssistantResponse:
      type: object
      properties:
        threadId:
          type: string
        runId:
          type: string
        requiredAction:
          $ref: "#/components/schemas/AiCompletionRequiredAction"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
    AiCompletionRequiredAction:
      type: object
      properties:
        toolCallId:
          type: string
        clarifyingQuestion:
          $ref: "#/components/schemas/ClarifyingQuestion"
        contentToAppend:
          type: string
    Annotation:
      type: object
      properties:
        index:
          type: integer
          format: int32
        type:
          type: string
        text:
          type: string
        file_path:
          $ref: "#/components/schemas/FilePath"
        file_citation:
          $ref: "#/components/schemas/FileCitation"
        start_index:
          type: integer
          format: int32
        end_index:
          type: integer
          format: int32
    Attachment:
      type: object
      properties:
        tools:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/CodeInterpreterTool"
            - $ref: "#/components/schemas/FileSearchTool"
            - $ref: "#/components/schemas/FunctionTool"
        file_id:
          type: string
    ClarifyingQuestion:
      required:
      - question
      type: object
      properties:
        question:
          type: string
    CodeInterpreterTool:
      type: object
      allOf:
      - $ref: "#/components/schemas/Tool"
    FileCitation:
      type: object
      properties:
        quote:
          type: string
        file_id:
          type: string
    FilePath:
      type: object
      properties:
        file_id:
          type: string
    FileSearch:
      type: object
      properties:
        max_num_results:
          type: integer
          format: int32
        ranking_options:
          $ref: "#/components/schemas/FileSearchRankingOptions"
    FileSearchRankingOptions:
      required:
      - score_threshold
      type: object
      properties:
        ranker:
          type: string
        score_threshold:
          type: number
          format: double
    FileSearchTool:
      type: object
      allOf:
      - $ref: "#/components/schemas/Tool"
      - type: object
        properties:
          file_search:
            $ref: "#/components/schemas/FileSearch"
    FunctionTool:
      type: object
      allOf:
      - $ref: "#/components/schemas/Tool"
      - type: object
        properties:
          function:
            type: object
    ImageFile:
      type: object
      properties:
        detail:
          type: string
        file_id:
          type: string
    ImageUrl:
      type: object
      properties:
        url:
          type: string
        detail:
          type: string
    IncompleteDetails:
      type: object
      properties:
        reason:
          type: string
    Message:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        status:
          type: string
        role:
          type: string
        content:
          type: array
          items:
            $ref: "#/components/schemas/MessageContent"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/Attachment"
        metadata:
          type: object
          additionalProperties:
            type: string
        created_at:
          type: integer
          format: int32
        thread_id:
          type: string
        incomplete_details:
          $ref: "#/components/schemas/IncompleteDetails"
        completed_at:
          type: integer
          format: int32
        incomplete_at:
          type: integer
          format: int32
        assistant_id:
          type: string
        run_id:
          type: string
    MessageContent:
      type: object
      properties:
        type:
          type: string
        text:
          $ref: "#/components/schemas/Text"
        image_file:
          $ref: "#/components/schemas/ImageFile"
        image_url:
          $ref: "#/components/schemas/ImageUrl"
    Text:
      type: object
      properties:
        value:
          type: string
        annotations:
          type: array
          items:
            $ref: "#/components/schemas/Annotation"
    Tool:
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
    NotebookAssistantCreationParams:
      type: object
      properties:
        additionalInstruction:
          type: string
    NotebookAssistant:
      required:
      - assistantId
      - createdAt
      - creator
      - id
      - notebook
      type: object
      properties:
        id:
          type: integer
          format: int32
        creator:
          $ref: "#/components/schemas/User"
        notebook:
          $ref: "#/components/schemas/Notebook"
        assistantId:
          type: string
        createdAt:
          type: string
          format: date-time
    AiGeneratedImage:
      type: object
      properties:
        b64encoded:
          type: string
    ChatRequest:
      type: object
      properties:
        userMessage:
          type: string
        threadId:
          type: string
    SseEmitter:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
    AiCompletionAnswerClarifyingQuestionParams:
      type: object
      properties:
        detailsToComplete:
          type: string
        threadId:
          type: string
        runId:
          type: string
        toolCallId:
          type: string
        answer:
          type: string
    UserDTO:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
        dailyNewNotesCount:
          type: integer
          format: int32
        spaceIntervals:
          pattern: "^\\d+((,\\s*\\d+){1,1000})*$"
          type: string
    NoteUpdateTopicDTO:
      required:
      - topicConstructor
      type: object
      properties:
        topicConstructor:
          maxLength: 150
          minLength: 1
          type: string
    NoteUpdateDetailsDTO:
      type: object
      properties:
        details:
          type: string
    NoteAccessoriesDTO:
      type: object
      properties:
        url:
          type: string
        imageUrl:
          type: string
        imageMask:
          pattern: "^(((-?[0-9.]+\\s+){3}-?[0-9.]+\\s+)*((-?[0-9.]+\\s+){3}-?[0-9.]+))?$"
          type: string
        useParentImage:
          type: boolean
        uploadImage:
          type: string
          format: binary
    Audio:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          maxLength: 255
          minLength: 1
          type: string
        contentType:
          type: string
    ImageWithMask:
      type: object
      properties:
        noteImage:
          type: string
        imageMask:
          type: string
    NoteAccessory:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        url:
          type: string
        imageUrl:
          type: string
        imageMask:
          type: string
        useParentImage:
          type: boolean
        audioAttachment:
          $ref: "#/components/schemas/Audio"
        imageWithMask:
          $ref: "#/components/schemas/ImageWithMask"
    WikidataSearchEntity:
      required:
      - label
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        description:
          type: string
    WikidataEntityData:
      required:
      - WikidataTitleInEnglish
      - WikipediaEnglishUrl
      type: object
      properties:
        WikidataTitleInEnglish:
          type: string
        WikipediaEnglishUrl:
          type: string
    CurrentUserInfo:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        externalIdentifier:
          type: string
    DueReviewPoints:
      type: object
      properties:
        toRepeat:
          type: array
          items:
            type: integer
            format: int32
        dueInDays:
          type: integer
          format: int32
    ReviewStatus:
      required:
      - learntCount
      - notLearntCount
      - toInitialReviewCount
      - toRepeatCount
      type: object
      properties:
        toRepeatCount:
          type: integer
          format: int32
        learntCount:
          type: integer
          format: int32
        notLearntCount:
          type: integer
          format: int32
        toInitialReviewCount:
          type: integer
          format: int32
    NoteInfo:
      required:
      - createdAt
      - note
      type: object
      properties:
        reviewPoint:
          $ref: "#/components/schemas/ReviewPoint"
        note:
          $ref: "#/components/schemas/NoteRealm"
        createdAt:
          type: string
          format: date-time
        reviewSetting:
          $ref: "#/components/schemas/ReviewSetting"
    NotebooksViewedByUser:
      required:
      - notebooks
      type: object
      properties:
        notebooks:
          type: array
          items:
            $ref: "#/components/schemas/Notebook"
        subscriptions:
          type: array
          items:
            $ref: "#/components/schemas/Subscription"
    NoteBrief:
      type: object
      properties:
        uri:
          type: string
        contextPath:
          type: string
        topic:
          type: string
        details:
          type: string
        createdAt:
          type: string
        target:
          type: string
    FailureReport:
      required:
      - createDatetime
      - errorDetail
      - errorName
      type: object
      properties:
        id:
          type: integer
          format: int32
        errorName:
          type: string
        errorDetail:
          type: string
        issueNumber:
          type: integer
          format: int32
        createDatetime:
          type: string
          format: date-time
        githubIssue:
          $ref: "#/components/schemas/GithubIssue"
    FailureReportForView:
      type: object
      properties:
        failureReport:
          $ref: "#/components/schemas/FailureReport"
        githubIssueUrl:
          type: string
    GithubIssue:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
    CircleForUserView:
      required:
      - id
      - invitationCode
      - members
      - name
      - notebooks
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        invitationCode:
          type: string
        notebooks:
          $ref: "#/components/schemas/NotebooksViewedByUser"
        members:
          type: array
          items:
            $ref: "#/components/schemas/UserForOtherUserView"
    UserForOtherUserView:
      type: object
      properties:
        name:
          type: string
    ChatResponseFormat:
      type: object
      properties:
        type:
          type: string
        jsonSchema:
          $ref: "#/components/schemas/ResponseJsonSchema"
    CodeInterpreterResources:
      type: object
      properties:
        file_ids:
          type: array
          items:
            type: string
    Delta:
      type: object
      properties:
        role:
          type: string
        content:
          type: array
          items:
            $ref: "#/components/schemas/DeltaContent"
    DeltaContent:
      type: object
      properties:
        index:
          type: integer
          format: int32
        type:
          type: string
        text:
          $ref: "#/components/schemas/Text"
        image_file:
          $ref: "#/components/schemas/ImageFile"
        image_url:
          $ref: "#/components/schemas/ImageUrl"
    DummyForGeneratingTypes:
      type: object
      properties:
        messageDelta:
          $ref: "#/components/schemas/MessageDelta"
        run:
          $ref: "#/components/schemas/Run"
        noteDetailsCompletion:
          $ref: "#/components/schemas/NoteDetailsCompletion"
    ExpiresAfter:
      type: object
      properties:
        anchor:
          type: string
        days:
          type: integer
          format: int32
    FileCounts:
      type: object
      properties:
        completed:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        cancelled:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        in_progress:
          type: integer
          format: int32
    FileSearchResources:
      type: object
      properties:
        vector_store_ids:
          type: array
          items:
            type: string
        vector_stores:
          type: array
          items:
            $ref: "#/components/schemas/VectorStore"
    Function:
      type: object
      properties:
        name:
          type: string
    JsonNode:
      type: object
    LastError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    MessageDelta:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        delta:
          $ref: "#/components/schemas/Delta"
    NoteDetailsCompletion:
      required:
      - completion
      type: object
      properties:
        completion:
          type: string
    RequiredAction:
      type: object
      properties:
        type:
          type: string
        submit_tool_outputs:
          $ref: "#/components/schemas/SubmitToolOutputs"
    ResponseJsonSchema:
      type: object
      properties:
        name:
          type: string
        strict:
          type: boolean
        schema:
          type: object
    Run:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        status:
          type: string
        model:
          type: string
        instructions:
          type: string
        tools:
          type: array
          items:
            oneOf:
            - $ref: "#/components/schemas/CodeInterpreterTool"
            - $ref: "#/components/schemas/FileSearchTool"
            - $ref: "#/components/schemas/FunctionTool"
        metadata:
          type: object
          additionalProperties:
            type: string
        usage:
          $ref: "#/components/schemas/Usage"
        temperature:
          type: number
          format: double
        created_at:
          type: integer
          format: int32
        thread_id:
          type: string
        assistant_id:
          type: string
        required_action:
          $ref: "#/components/schemas/RequiredAction"
        last_error:
          $ref: "#/components/schemas/LastError"
        expires_at:
          type: integer
          format: int32
        started_at:
          type: integer
          format: int32
        cancelled_at:
          type: integer
          format: int32
        failed_at:
          type: integer
          format: int32
        completed_at:
          type: integer
          format: int32
        incomplete_details:
          $ref: "#/components/schemas/IncompleteDetails"
        top_p:
          type: number
          format: double
        max_prompt_tokens:
          type: integer
          format: int32
        max_completion_tokens:
          type: integer
          format: int32
        truncation_strategy:
          $ref: "#/components/schemas/TruncationStrategy"
        tool_choice:
          $ref: "#/components/schemas/ToolChoice"
        response_format:
          $ref: "#/components/schemas/ChatResponseFormat"
        tool_resources:
          $ref: "#/components/schemas/ToolResources"
    RunImage:
      type: object
      properties:
        file_id:
          type: string
    SubmitToolOutputs:
      type: object
      properties:
        tool_calls:
          type: array
          items:
            $ref: "#/components/schemas/ToolCall"
    ToolCall:
      type: object
      properties:
        index:
          type: integer
          format: int32
        id:
          type: string
        type:
          type: string
        function:
          $ref: "#/components/schemas/ToolCallFunction"
        code_interpreter:
          $ref: "#/components/schemas/ToolCallCodeInterpreter"
        file_search:
          type: object
          additionalProperties:
            type: string
    ToolCallCodeInterpreter:
      type: object
      properties:
        input:
          type: string
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/ToolCallCodeInterpreterOutput"
    ToolCallCodeInterpreterOutput:
      type: object
      properties:
        index:
          type: integer
          format: int32
        type:
          type: string
        logs:
          type: string
        image:
          $ref: "#/components/schemas/RunImage"
    ToolCallFunction:
      type: object
      properties:
        name:
          type: string
        arguments:
          $ref: "#/components/schemas/JsonNode"
        output:
          type: string
    ToolChoice:
      type: object
      properties:
        function:
          $ref: "#/components/schemas/Function"
        type:
          type: string
    ToolResources:
      type: object
      properties:
        code_interpreter:
          $ref: "#/components/schemas/CodeInterpreterResources"
        file_search:
          $ref: "#/components/schemas/FileSearchResources"
    TruncationStrategy:
      type: object
      properties:
        type:
          type: string
        last_messages:
          type: integer
          format: int32
    Usage:
      type: object
      properties:
        prompt_tokens:
          type: integer
          format: int64
        completion_tokens:
          type: integer
          format: int64
        total_tokens:
          type: integer
          format: int64
    VectorStore:
      type: object
      properties:
        id:
          type: string
        object:
          type: string
        name:
          type: string
        bytes:
          type: integer
          format: int32
        status:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
        created_at:
          type: integer
          format: int32
        file_counts:
          $ref: "#/components/schemas/FileCounts"
        expires_after:
          $ref: "#/components/schemas/ExpiresAfter"
        expires_at:
          type: integer
          format: int32
        last_active_at:
          type: integer
          format: int32
